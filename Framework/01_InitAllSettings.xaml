<Activity mc:Ignorable="sap sap2010" x:Class="InitAllSettings" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:xl="clr-namespace:XAS_Custom.Logging;assembly=XAS_Package">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Config di sheet GlobalHandler (out)" Name="out_ConfigGlobalHandler" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Config di sheet User (out)" Name="out_ConfigUser" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Config di sheet MailIT(out)" Name="out_ConfigMailIT" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Config di sheet Mail(out)" Name="out_ConfigMail" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="Config di sheet IT(out)" Name="out_ConfigIT" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Config di sheet Asset(out)" Name="out_ConfigAsset" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Config di sheet Queue(out)" Name="out_ConfigQueue" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Nama project (out)" Name="out_FlowName" Type="OutArgument(x:String)" />
    <x:Property Name="out_unattendedFlag" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1154,4983</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>InitAllSettings_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>XAS_Custom.Logging</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>XAS_Package</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InitAllSettings" sap:VirtualizedContainerService.HintSize="695,4878" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Config di sheet User" Name="ConfigTableUser" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Exist config user" Name="BooleanPathConfigUser" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Path config dari asset" Name="ConfigPathAsset" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Config path master" Default="Data\Config.xlsx" Name="ConfigPathMaster" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Config path final" Name="ConfigPath" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Config di sheet Mail" Name="ConfigTableMail" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Config di sheet IT" Name="ConfigTableIT" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Config di sheet MailIT" Name="ConfigTableMailIT" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Config di sheet Global Handler" Name="ConfigTableGlobalHandler" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Reuse Boolean" Name="BooleanExistGeneral" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Mengambil nama project dari file project.json" sap:VirtualizedContainerService.HintSize="653,483" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_FlowName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[file.ReadAllLines("project.json")(1).ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_FlowName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_FlowName.Split(":"c)(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_FlowName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_FlowName.Split(""""c)(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_FlowName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_FlowName.Replace(" ","_")]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <xl:Check_Log DisplayName="Check Log" sap:VirtualizedContainerService.HintSize="653,22" sap2010:WorkflowViewState.IdRef="Check_Log_1" MaxMonth="3" ProjectName="[out_FlowName]" />
    <xl:Write_Log DisplayName="Write Log" sap:VirtualizedContainerService.HintSize="653,22" sap2010:WorkflowViewState.IdRef="Write_Log_1" LogType="Info" Message="Init All Settings" ProjectName="[out_FlowName]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Membaca Config Sheet Asset" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="653,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadTableConfig.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">Asset</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[out_ConfigAsset]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">[ConfigPathMaster]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Projectname">[out_FlowName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Membaca Config Sheet IT" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="653,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadTableConfig.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
          <Literal x:TypeArguments="x:String">IT</Literal>
        </InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">
          <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="out_ConfigIT" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="ConfigPathMaster" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Projectname">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="out_FlowName" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <If Condition="[out_ConfigIT(&quot;Server_Unattended&quot;).ToString.Trim.ToLower = &quot;yes&quot;]" DisplayName="Check config robot unattended in sheet IT" sap:VirtualizedContainerService.HintSize="653,362" sap2010:WorkflowViewState.IdRef="If_12">
      <If.Then>
        <Sequence DisplayName="Unattended" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_27">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign robot unattended" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_unattendedFlag]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
          <xl:Write_Log DisplayName="Write Log" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Write_Log_6" LogType="Info" Message="Robot initialzied as Unattended" ProjectName="[out_FlowName]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Attended" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_28">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign robot attended" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_unattendedFlag]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
          <xl:Write_Log DisplayName="Write Log" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Write_Log_7" LogType="Info" Message="Robot initialized as attended" ProjectName="[out_FlowName]" />
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[out_unattendedFlag = True]" DisplayName="Check robot unattended" sap:VirtualizedContainerService.HintSize="653,302" sap2010:WorkflowViewState.IdRef="If_11">
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Khusus untuk unattended. Membaca Config Sheet User dari folder project untuk get value path Config Local" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadTableConfig.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">User</InArgument>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[out_ConfigUser]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">[ConfigPathMaster]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Projectname">[out_FlowName]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If sap2010:Annotation.AnnotationText="Jika Asset tidak ditemukan, data config akan diambil dari Config Master yang ada di folder project." Condition="[String.IsNullOrWhiteSpace(ConfigPathAsset)]" sap:VirtualizedContainerService.HintSize="653,431" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_23">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ConfigPathAsset]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">C:\Robot_Setting\[flowName]\</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ConfigPathAsset]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[ConfigPathAsset.Replace("[flowName]",out_FlowName)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[ConfigPathAsset]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[ConfigPathAsset.Replace("[flowName]",out_FlowName)]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <If Condition="[out_unattendedFlag = True]" DisplayName="Check robot unattended" sap:VirtualizedContainerService.HintSize="653,265" sap2010:WorkflowViewState.IdRef="If_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign sap2010:Annotation.AnnotationText="Khusus untuk unattended, path menyesuaikan. Kalau attended ini bisa dihapus." sap:VirtualizedContainerService.HintSize="262,117" sap2010:WorkflowViewState.IdRef="Assign_27">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[ConfigPathAsset]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[out_ConfigUser("Path_RobotSetting").ToString]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </If.Then>
    </If>
    <Sequence sap:VirtualizedContainerService.HintSize="653,1276" sap2010:WorkflowViewState.IdRef="Sequence_22">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:PathExists DisplayName="Path Exists" Exists="[BooleanExistGeneral]" sap:VirtualizedContainerService.HintSize="579,89" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[ConfigPathAsset]" PathType="File" />
      <If sap2010:Annotation.AnnotationText="Cek apakah ada folder Config Local. Jika tidak, robot create folder sesuai nama project." Condition="[BooleanExistGeneral]" sap:VirtualizedContainerService.HintSize="579,350" sap2010:WorkflowViewState.IdRef="If_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,171" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[ConfigPathAsset]" />
          </Sequence>
        </If.Else>
      </If>
      <Assign sap:VirtualizedContainerService.HintSize="579,60" sap2010:WorkflowViewState.IdRef="Assign_24">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[ConfigPathAsset]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[ConfigPathAsset+"Config.xlsx"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:PathExists DisplayName="Path Exists" Exists="[BooleanPathConfigUser]" sap:VirtualizedContainerService.HintSize="579,89" sap2010:WorkflowViewState.IdRef="PathExists_5" Path="[ConfigPathAsset]" PathType="File">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:PathExists>
      <If sap2010:Annotation.AnnotationText="Cek apakah ada Config Local. Jika tidak, robot akan duplikasi Config dari folder project." Condition="[BooleanPathConfigUser]" sap:VirtualizedContainerService.HintSize="579,336" sap2010:WorkflowViewState.IdRef="If_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Else>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[ConfigPathAsset]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="False" Path="[ConfigPathMaster]" />
        </If.Else>
      </If>
      <Assign sap:VirtualizedContainerService.HintSize="579,60" sap2010:WorkflowViewState.IdRef="Assign_25">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[ConfigPath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[ConfigPathAsset]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <xl:Write_Log DisplayName="Write Log" sap:VirtualizedContainerService.HintSize="653,22" sap2010:WorkflowViewState.IdRef="Write_Log_3" LogType="Info" Message="[&quot;Membaca config dari &quot;+ConfigPath]" ProjectName="[out_FlowName]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Membaca Config Sheet User" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="653,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadTableConfig.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">User</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[out_ConfigUser]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">[ConfigPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Projectname">[out_FlowName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Membaca Config Sheet IT" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="653,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadTableConfig.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">IT</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[out_ConfigIT]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">[ConfigPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Projectname">[out_FlowName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Membaca Config Sheet Queue" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="653,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadTableConfig.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">Queue</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[out_ConfigQueue]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">[ConfigPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Projectname">[out_FlowName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Membaca Config Sheet Global Handler" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="621,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadTableConfig.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">Global Handler</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[out_ConfigGlobalHandler]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">[ConfigPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Projectname">[out_FlowName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Membaca Config Sheet Mail" DisplayName="Invoke ReadTableEmail workflow" sap:VirtualizedContainerService.HintSize="611,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReadTableEmail.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_config">[out_ConfigMail]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_sheet">Mail</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_configPath">[ConfigPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_projectName">[out_FlowName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>